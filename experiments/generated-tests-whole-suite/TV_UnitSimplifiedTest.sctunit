testclass TV_UnitSimplifiedTest for statechart TV_Unit {
	@Test
	operation test00 () {
	    raise input.toggle
	}

	@Test
	operation test01 () {
	    raise input.satellite
	}

	@Test
	operation test02 () {
	    raise input.cable
	}

	@Test
	operation test04 () {
	    triggerWithoutEvent
	    assert !is_final
	}

	@Test
	operation test05 () {
	    enter
	    raise device.off
	    assert is_active
	}

	@Test
	operation test06 () {
	    enter
	    raise device.on
	    raise change
	    assert is_active
	}

	@Test
	operation test07 () {
	    enter
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test08 () {
	    enter
	    raise device.on
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test09 () {
	    enter
	    assert is_active
	    assert active (TV_Unit._TV_Unit_._TV_onSleep_)
	}

	@Test
	operation test10 () {
	    enter
	    raise device.on
	    assert is_active
	    assert active (TV_Unit._TV_Unit_._TV_On_._TV_Working_.satelliteTV._Changing_Channel_.changeChannel)
	}

	@Test
	operation test11 () {
	    enter
	    raise device.on
	    assert is_active
	    assert active (TV_Unit._TV_Unit_._TV_On_._TV_Working_.satelliteTV)
	}

	@Test
	operation test12 () {
	    enter
	    raise device.on
	    assert is_active
	    assert active (TV_Unit._TV_Unit_._TV_On_)
	}

	@Test
	operation test14 () {
	    assert !active (TV_Unit._TV_Unit_._TV_On_._TV_Working_.satelliteTV)
	}

	@Test
	operation test15 () {
	    assert !active (TV_Unit._TV_Unit_._TV_onSleep_)
	}

	@Test
	operation test16 () {
	    assert !active (TV_Unit._TV_Unit_._TV_On_._TV_Working_.hdmi)
	}

	@Test
	operation test17 () {
	    assert !active (TV_Unit._TV_Unit_._TV_On_._TV_Working_.cable)
	}

	@Test
	operation test18 () {
	    assert !active (TV_Unit._TV_Unit_._TV_On_)
	}

	@Test
	operation test19 () {
	    assert !active (TV_Unit._TV_Unit_._TV_On_._TV_Working_.satelliteTV._Changing_Channel_.changeChannel)
	}

	@Test
	operation test20 () {
	    raise input.hdmi
	}

	@Test
	operation test21 () {
	    enter
	    assert is_active
	}

	@Test
	operation test22 () {
	    assert !is_active
	}

	@Test
	operation test23 () {
	    exit
	    assert !is_active
	}

	@Test
	operation test26 () {
	    assert !is_active
	    enter
	    raise device.on
	    proceed 500ms
	    assert is_active
	}

	@Test
	operation test27 () {
	    assert !is_active
	    assert !is_final
	}

	@Test
	operation test28 () {
	    assert !is_active
	    enter
	    raise device.on
	    raise device.off
	    assert is_active
	}

}