testclass Hub_PowerManagerSimplifiedTest for statechart Hub_PowerManager {
	@Test
	operation test00 () {
	    enter
	    raise threshold_reached
	    proceed 500ms
	    proceed 1s
	    assert is_active
	}

	@Test
	operation test01 () {
	    enter
	    raise threshold_reached
	    proceed 500ms
	    raise threshold_reached
	    assert is_active
	}

	@Test
	operation test02 () {
	    enter
	    raise threshold_reached
	    raise threshold_reached
	    assert is_active
	}

	@Test
	operation test03 () {
	    enter
	    triggerWithoutEvent
	    assert is_active
	}

	@Test
	operation test04 () {
	    enter
	    proceed 500ms
	    assert is_active
	}

	@Test
	operation test05 () {
	    enter
	    raise threshold_reached
	    proceed 500ms
	    exit
	    assert !is_active
	}

	@Test
	operation test06 () {
	    enter
	    raise threshold_reached
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test07 () {
	    enter
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test08 () {
	    enter
	    raise threshold_reached
	    proceed 500ms
	    assert is_active
	    assert active (Hub_PowerManager._HUB_PowerManager_.double_check)
	}

	@Test
	operation test09 () {
	    enter
	    raise threshold_reached
	    assert is_active
	    assert active (Hub_PowerManager._HUB_PowerManager_.threshold_reached._Return_DeviceIndex_To_Be_TurnedOFF_.initialize_last_value)
	}

	@Test
	operation test10 () {
	    enter
	    raise threshold_reached
	    assert is_active
	    assert active (Hub_PowerManager._HUB_PowerManager_.threshold_reached)
	}

	@Test
	operation test11 () {
	    enter
	    assert is_active
	    assert !active (Hub_PowerManager._HUB_PowerManager_.threshold_reached)
	}

	@Test
	operation test12 () {
	    enter
	    assert is_active
	    assert active (Hub_PowerManager._HUB_PowerManager_.monitoring_power_consumption)
	}

	@Test
	operation test13 () {
	    assert !active (Hub_PowerManager._HUB_PowerManager_.threshold_reached)
	}

	@Test
	operation test14 () {
	    assert !active (Hub_PowerManager._HUB_PowerManager_.double_check)
	}

	@Test
	operation test15 () {
	    assert !active (Hub_PowerManager._HUB_PowerManager_.threshold_reached._Return_DeviceIndex_To_Be_TurnedOFF_.initialize_last_value)
	}

	@Test
	operation test17 () {
	    assert !active (Hub_PowerManager._HUB_PowerManager_.monitoring_power_consumption)
	}

	@Test
	operation test18 () {
	    raise threshold_reached
	    assert !is_final
	}

	@Test
	operation test19 () {
	    enter
	    assert is_active
	}

	@Test
	operation test20 () {
	    assert !is_active
	}

	@Test
	operation test21 () {
	    exit
	    assert !is_active
	}

	@Test
	operation test23 () {
	    assert !is_active
	    assert !is_final
	}

	@Test
	operation test25 () {
	    enter
	    raise threshold_reached
	    proceed 500ms
	    proceed 1s
	    assert !is_final
	}

}