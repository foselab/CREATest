testclass TrackerSimplifiedTest for statechart mrw.^statechart.Tracker {
	@Test
	operation test01 () {
	    enter
	    triggerWithoutEvent
	    assert is_active
	}

	@Test
	operation test02 () {
	    enter
	    raise received
	    raise received
	    assert is_active
	}

	@Test
	operation test03 () {
	    enter
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test04 () {
	    exit
	    assert !is_active
	}

	@Test
	operation test05 () {
	    enter
	    assert is_active
	    assert active (mrw.^statechart.Tracker.main_region.Idle)
	}

	@Test
	operation test06 () {
	    enter
	    raise received
	    assert is_active
	    assert !active (mrw.^statechart.Tracker.main_region.Driving)
	}

	@Test
	operation test07 () {
	    enter
	    raise received
	    assert is_active
	    assert active (mrw.^statechart.Tracker.main_region.Preparing)
	}

	@Test
	operation test09 () {
	    assert !is_active
	    assert !active (mrw.^statechart.Tracker.main_region.Driving)
	}

	@Test
	operation test10 () {
	    assert !active (mrw.^statechart.Tracker.main_region.Idle)
	    assert !is_active
	}

	@Test
	operation test11 () {
	    assert !is_active
	    assert !active (mrw.^statechart.Tracker.main_region.Driving.Tracking.Free)
	}

	@Test
	operation test12 () {
	    assert !active (mrw.^statechart.Tracker.main_region.Driving.Tracking.Occupy)
	    assert !is_active
	}

	@Test
	operation test13 () {
	    assert !is_active
	    assert !active (mrw.^statechart.Tracker.main_region.Driving.Tracking.First)
	}

	@Test
	operation test14 () {
	    assert !active (mrw.^statechart.Tracker.main_region.Preparing)
	    assert !is_active
	}

	@Test
	operation test16 () {
	    assert !is_active
	    enter
	    raise received
	    triggerWithoutEvent
	    assert is_active
	}

	@Test
	operation test17 () {
	    assert !is_active
	}

	@Test
	operation test21 () {
	    assert !is_active
	    assert !is_final
	}

	@Test
	operation test22 () {
	    enter
	    raise received
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test23 () {
	    assert !is_active
	    enter
	    assert is_active
	}

}