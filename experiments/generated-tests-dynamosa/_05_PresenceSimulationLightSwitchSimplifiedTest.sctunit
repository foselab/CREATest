testclass _05_PresenceSimulationLightSwitchSimplifiedTest for statechart _05_PresenceSimulationLightSwitch {
	@Test
	operation test00 () {
	    triggerWithoutEvent
	    assert !is_final
	}

	@Test
	operation test02 () {
	    enter
	    raise hmi.switch
	    raise hmi.switch
	    assert is_active
	}

	@Test
	operation test03 () {
	    enter
	    raise hmi.toggleMode
	    raise hmi.changeBrightness
	}

	@Test
	operation test04 () {
	    enter
	    raise hmi.switch
	    raise hmi.toggleMode
	    assert is_active
	}

	@Test
	operation test05 () {
	    exit
	    assert !is_final
	}

	@Test
	operation test06 () {
	    enter
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test07 () {
	    enter
	    raise hmi.toggleMode
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test08 () {
	    enter
	    raise hmi.switch
	    assert is_active
	    assert active (_05_PresenceSimulationLightSwitch.main.Manual.mode.On)
	}

	@Test
	operation test09 () {
	    enter
	    assert is_active
	    assert active (_05_PresenceSimulationLightSwitch.main.Manual.mode.Off)
	}

	@Test
	operation test10 () {
	    enter
	    assert is_active
	    assert active (_05_PresenceSimulationLightSwitch.main.Manual)
	}

	@Test
	operation test11 () {
	    enter
	    raise hmi.toggleMode
	    assert is_active
	    assert !active (_05_PresenceSimulationLightSwitch.main.Manual)
	}

	@Test
	operation test12 () {
	    enter
	    raise hmi.toggleMode
	    assert !active (_05_PresenceSimulationLightSwitch.main.Presence_Simulation.mode.Active)
	}

	@Test
	operation test13 () {
	    enter
	    raise hmi.toggleMode
	    assert active (_05_PresenceSimulationLightSwitch.main.Presence_Simulation.mode.Idle)
	}

	@Test
	operation test14 () {
	    enter
	    raise hmi.toggleMode
	    assert active (_05_PresenceSimulationLightSwitch.main.Presence_Simulation)
	}

	@Test
	operation test16 () {
	    assert !active (_05_PresenceSimulationLightSwitch.main.Manual)
	}

	@Test
	operation test17 () {
	    assert !active (_05_PresenceSimulationLightSwitch.main.Presence_Simulation.mode.Active)
	}

	@Test
	operation test18 () {
	    assert !active (_05_PresenceSimulationLightSwitch.main.Presence_Simulation.mode.Active.presence.Absent)
	}

	@Test
	operation test19 () {
	    assert !active (_05_PresenceSimulationLightSwitch.main.Presence_Simulation.mode.Active.presence.Present)
	}

	@Test
	operation test20 () {
	    assert !active (_05_PresenceSimulationLightSwitch.main.Manual.mode.On)
	}

	@Test
	operation test21 () {
	    assert !active (_05_PresenceSimulationLightSwitch.main.Manual.mode.Off)
	}

	@Test
	operation test22 () {
	    assert !active (_05_PresenceSimulationLightSwitch.main.Presence_Simulation.mode.Active.schedule.Waiting)
	}

	@Test
	operation test23 () {
	    assert !is_active
	    assert !active (_05_PresenceSimulationLightSwitch.main.Presence_Simulation)
	}

	@Test
	operation test24 () {
	    assert !active (_05_PresenceSimulationLightSwitch.main.Presence_Simulation.mode.Idle)
	    assert !is_active
	}

	@Test
	operation test26 () {
	    assert !is_active
	}

	@Test
	operation test27 () {
	    assert !is_active
	    enter
	    assert is_active
	}

	@Test
	operation test30 () {
	    enter
	    raise hmi.switch
	    raise hmi.changeBrightness
	    raise hmi.changeBrightness
	    raise hmi.changeBrightness
	    raise hmi.changeBrightness
	    raise hmi.changeBrightness
	    raise hmi.changeBrightness
	    raise hmi.changeBrightness
	    raise hmi.changeBrightness
	    raise hmi.changeBrightness
	}

	@Test
	operation test32 () {
	    assert !is_final
	    assert !is_active
	}

	@Test
	operation test33 () {
	    enter
	    raise hmi.switch
	    exit
	    assert !is_active
	}

	@Test
	operation test35 () {
	    assert !is_active
	    enter
	    raise hmi.toggleMode
	    raise hmi.toggleMode
	    assert is_active
	}

}