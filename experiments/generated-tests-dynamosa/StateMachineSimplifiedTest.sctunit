testclass StateMachineSimplifiedTest for statechart StateMachine {
	@Test
	operation test00 () {
	    enter
	    raise inEvent1
	    raise inEvent1
	    assert is_active
	}

	@Test
	operation test01 () {
	    enter
	    triggerWithoutEvent
	    assert is_active
	}

	@Test
	operation test02 () {
	    exit
	    assert !is_final
	}

	@Test
	operation test03 () {
	    enter
	    raise inEvent1
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test04 () {
	    enter
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test05 () {
	    enter
	    raise inEvent2
	    assert is_active
	    assert active (StateMachine.main_region._final_)
	}

	@Test
	operation test06 () {
	    enter
	    assert is_active
	    assert active (StateMachine.main_region.StateA)
	}

	@Test
	operation test08 () {
	    assert !active (StateMachine.main_region.StateB)
	}

	@Test
	operation test09 () {
	    assert !active (StateMachine.main_region._final_)
	}

	@Test
	operation test10 () {
	    assert !active (StateMachine.main_region.StateA)
	}

	@Test
	operation test11 () {
	    raise inEvent2
	    assert !is_active
	}

	@Test
	operation test12 () {
	    enter
	    raise inEvent2
	    raise inEvent1
	    assert is_final
	}

	@Test
	operation test13 () {
	    enter
	    raise inEvent2
	    assert is_final
	}

	@Test
	operation test14 () {
	    assert !is_active
	    assert !is_final
	}

	@Test
	operation test15 () {
	    assert !is_active
	    enter
	    assert is_active
	}

	@Test
	operation test16 () {
	    assert !is_active
	}

	@Test
	operation test19 () {
	    assert !is_active
	    enter
	    raise inEvent1
	    proceed 2s
	    assert is_active
	}

	@Test
	operation test20 () {
	    assert !is_active
	    enter
	    raise inEvent1
	    assert active (StateMachine.main_region.StateB)
	}

	@Test
	operation test21 () {
	    enter
	    raise inEvent2
	    assert is_active
	    exit
	    assert !is_active
	}

}