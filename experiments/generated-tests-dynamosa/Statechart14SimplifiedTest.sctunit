testclass Statechart14SimplifiedTest for statechart Statechart14 {
	@Test
	operation test00 () {
	    raise carDetected
	    assert !is_active
	}

	@Test
	operation test01 () {
	    raise buttonReleased
	    assert !is_final
	}

	@Test
	operation test03 () {
	    enter
	    raise buttonPressed
	    triggerWithoutEvent
	    assert is_active
	}

	@Test
	operation test04 () {
	    exit
	    assert !is_final
	}

	@Test
	operation test05 () {
	    enter
	    assert is_active
	}

	@Test
	operation test06 () {
	    enter
	    proceed 2s
	    assert is_active
	    assert active (Statechart14.main_region.orthogonal.TRAFFIC_LIGHT_MODES.normal.r1.smart_green.r1.green)
	}

	@Test
	operation test07 () {
	    enter
	    proceed 2s
	    assert active (Statechart14.main_region.orthogonal.TRAFFIC_LIGHT_MODES.normal.r1.smart_green)
	}

	@Test
	operation test09 () {
	    enter
	    assert is_active
	    assert active (Statechart14.main_region.orthogonal.TRAFFIC_LIGHT_MODES.normal.r1.red)
	}

	@Test
	operation test10 () {
	    enter
	    assert is_active
	    assert active (Statechart14.main_region.orthogonal.TRAFFIC_LIGHT_MODES.normal)
	}

	@Test
	operation test11 () {
	    enter
	    raise buttonPressed
	    assert active (Statechart14.main_region.orthogonal.TOGGLE_MODE_BUTTON.pressed)
	}

	@Test
	operation test12 () {
	    enter
	    assert is_active
	    assert active (Statechart14.main_region.orthogonal.TOGGLE_MODE_BUTTON.not_pressed)
	}

	@Test
	operation test13 () {
	    enter
	    assert is_active
	    assert active (Statechart14.main_region.orthogonal)
	}

	@Test
	operation test15 () {
	    assert !active (Statechart14.main_region.orthogonal.TRAFFIC_LIGHT_MODES.interrupted)
	}

	@Test
	operation test16 () {
	    assert !active (Statechart14.main_region.orthogonal.TRAFFIC_LIGHT_MODES.normal)
	}

	@Test
	operation test17 () {
	    assert !is_active
	    assert !active (Statechart14.main_region.orthogonal)
	}

	@Test
	operation test18 () {
	    assert !is_active
	}

	@Test
	operation test21 () {
	    assert !is_active
	    assert !active (Statechart14.main_region.orthogonal.TRAFFIC_LIGHT_MODES.normal.r1.yellow)
	}

	@Test
	operation test22 () {
	    assert !active (Statechart14.main_region.orthogonal.TRAFFIC_LIGHT_MODES.normal.r1.red)
	    assert !is_active
	}

	@Test
	operation test23 () {
	    assert !is_active
	    assert !active (Statechart14.main_region.orthogonal.TOGGLE_MODE_BUTTON.pressed)
	}

	@Test
	operation test25 () {
	    assert !active (Statechart14.main_region.orthogonal.TOGGLE_MODE_BUTTON.not_pressed)
	    assert !is_active
	}

	@Test
	operation test26 () {
	    enter
	    proceed 2s
	    raise buttonPressed
	    assert !is_final
	}

	@Test
	operation test29 () {
	    assert !is_active
	    enter
	    assert is_active
	}

	@Test
	operation test31 () {
	    assert !is_final
	    assert !is_active
	}

	@Test
	operation test33 () {
	    enter
	    raise buttonPressed
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test34 () {
	    enter
	    proceed 2s
	    exit
	    assert !is_active
	}

}