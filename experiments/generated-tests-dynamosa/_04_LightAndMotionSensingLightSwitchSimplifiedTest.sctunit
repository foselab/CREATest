testclass _04_LightAndMotionSensingLightSwitchSimplifiedTest for statechart _04_LightAndMotionSensingLightSwitch {
	@Test
	operation test00 () {
	    raise luminosity.dark
	}

	@Test
	operation test01 () {
	    raise luminosity.bright
	}

	@Test
	operation test02 () {
	    triggerWithoutEvent
	    assert !is_final
	}

	@Test
	operation test04 () {
	    enter
	    raise hmi.switch
	    raise hmi.switch
	    assert is_active
	}

	@Test
	operation test05 () {
	    enter
	    raise hmi.toggleMode
	    raise hmi.toggleMode
	    assert is_active
	}

	@Test
	operation test06 () {
	    enter
	    raise hmi.toggleMode
	    raise hmi.toggleMode
	    raise hmi.switch
	    assert is_active
	}

	@Test
	operation test07 () {
	    enter
	    raise hmi.switch
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test08 () {
	    enter
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test09 () {
	    enter
	    raise hmi.toggleMode
	    raise hmi.toggleMode
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test10 () {
	    enter
	    raise hmi.toggleMode
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test11 () {
	    enter
	    raise hmi.toggleMode
	    raise hmi.toggleMode
	    enter
	    raise hmi.toggleMode
	    assert is_active
	}

	@Test
	operation test12 () {
	    enter
	    raise hmi.switch
	    assert is_active
	    assert active (_04_LightAndMotionSensingLightSwitch.modes.Manual.r1.On)
	}

	@Test
	operation test13 () {
	    enter
	    assert is_active
	    assert active (_04_LightAndMotionSensingLightSwitch.modes.Manual.r1.Off)
	}

	@Test
	operation test14 () {
	    enter
	    assert is_active
	    assert active (_04_LightAndMotionSensingLightSwitch.modes.Manual)
	}

	@Test
	operation test15 () {
	    enter
	    raise hmi.toggleMode
	    assert is_active
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Manual)
	}

	@Test
	operation test16 () {
	    enter
	    raise hmi.toggleMode
	    raise hmi.toggleMode
	    assert is_active
	    assert active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Light_Sensing.r1.Bright)
	}

	@Test
	operation test17 () {
	    enter
	    raise hmi.toggleMode
	    raise hmi.toggleMode
	    assert is_active
	    assert active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Light_Sensing)
	}

	@Test
	operation test18 () {
	    enter
	    raise hmi.toggleMode
	    assert is_active
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Light_Sensing)
	}

	@Test
	operation test19 () {
	    enter
	    raise hmi.toggleMode
	    assert is_active
	    assert active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Motion_Sensing.r1.Still)
	}

	@Test
	operation test20 () {
	    enter
	    raise hmi.toggleMode
	    assert is_active
	    assert active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Motion_Sensing)
	}

	@Test
	operation test21 () {
	    enter
	    raise hmi.toggleMode
	    assert is_active
	    assert active (_04_LightAndMotionSensingLightSwitch.modes.Automatic)
	}

	@Test
	operation test23 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Manual)
	}

	@Test
	operation test24 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Motion_Sensing)
	}

	@Test
	operation test25 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Automatic)
	}

	@Test
	operation test26 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Manual.r1.On)
	}

	@Test
	operation test27 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Manual.r1.Off)
	}

	@Test
	operation test28 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Light_Sensing.r1.Getting_Bright)
	}

	@Test
	operation test29 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Light_Sensing.r1.Getting_Dark)
	}

	@Test
	operation test30 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Light_Sensing.r1.Dark)
	}

	@Test
	operation test31 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Light_Sensing.r1.Bright)
	}

	@Test
	operation test32 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Motion_Sensing.r1.Motion)
	}

	@Test
	operation test33 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Light_Sensing)
	}

	@Test
	operation test34 () {
	    assert !active (_04_LightAndMotionSensingLightSwitch.modes.Automatic.modes.Motion_Sensing.r1.Still)
	}

	@Test
	operation test35 () {
	    enter
	    assert is_active
	}

	@Test
	operation test36 () {
	    assert !is_active
	}

	@Test
	operation test37 () {
	    exit
	    assert !is_final
	}

	@Test
	operation test41 () {
	    assert !is_active
	    enter
	    raise hmi.toggleMode
	    raise hmi.switch
	    raise hmi.toggleMode
	    assert is_active
	}

	@Test
	operation test42 () {
	    assert !is_active
	    enter
	    raise hmi.switch
	    raise hmi.toggleMode
	    raise hmi.switch
	    raise hmi.changeBrightness
	    assert is_active
	}

	@Test
	operation test43 () {
	    enter
	    raise hmi.toggleMode
	    raise hmi.toggleMode
	    raise hmi.toggleMode
	}

	@Test
	operation test44 () {
	    assert !is_active
	    enter
	    raise hmi.switch
	    raise hmi.changeBrightness
	    assert is_active
	}

	@Test
	operation test45 () {
	    assert !is_active
	    assert !is_final
	}

}