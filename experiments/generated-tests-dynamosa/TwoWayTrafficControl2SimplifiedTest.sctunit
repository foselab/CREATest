testclass TwoWayTrafficControl2SimplifiedTest for statechart TwoWayTrafficControl2 {
	@Test
	operation test00 () {
	    assert !is_active
	}

	@Test
	operation test01 () {
	    proceed 563 cycle
	    assert !is_active
	}

	@Test
	operation test02 () {
	    raise on
	    enter
	    proceed 1 cycle
	    proceed 1 cycle
	    assert is_active
	}

	@Test
	operation test03 () {
	    enter
	    proceed 1 cycle
	    assert is_active
	}

	@Test
	operation test04 () {
	    raise on
	    enter
	    proceed 1 cycle
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test05 () {
	    enter
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test06 () {
	    enter
	    assert is_active
	    assert !active (TwoWayTrafficControl2.main.Operate)
	}

	@Test
	operation test07 () {
	    raise on
	    enter
	    proceed 1 cycle
	    assert is_active
	    assert active (TwoWayTrafficControl2.main.Standby)
	}

	@Test
	operation test08 () {
	    enter
	    assert is_active
	    assert active (TwoWayTrafficControl2.main.Off)
	}

	@Test
	operation test10 () {
	    assert !active (TwoWayTrafficControl2.main.Operate.r.Process_B)
	}

	@Test
	operation test11 () {
	    assert !active (TwoWayTrafficControl2.main.Operate.r.Process_A)
	}

	@Test
	operation test12 () {
	    assert !active (TwoWayTrafficControl2.main.Standby)
	}

	@Test
	operation test13 () {
	    assert !active (TwoWayTrafficControl2.main.Operate)
	}

	@Test
	operation test14 () {
	    assert !active (TwoWayTrafficControl2.main.Off)
	}

	@Test
	operation test15 () {
	    enter
	    assert is_active
	}

	@Test
	operation test17 () {
	    exit
	    assert !is_final
	}

	@Test
	operation test18 () {
	    raise standby
	    assert !is_active
	}

	@Test
	operation test19 () {
	    raise off
	    assert !is_active
	}

	@Test
	operation test21 () {
	    assert !is_final
	    assert !is_active
	}

}