testclass LEDLight_UnitSimplifiedTest for statechart LEDLight_Unit {
	@Test
	operation test02 () {
	    raise Brightness.up
	}

	@Test
	operation test03 () {
	    raise Brightness.down
	}

	@Test
	operation test05 () {
	    enter
	    raise device.off
	    assert is_active
	}

	@Test
	operation test06 () {
	    enter
	    raise device.on
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test07 () {
	    enter
	    assert is_active
	    exit
	    assert !is_active
	}

	@Test
	operation test08 () {
	    enter
	    assert is_active
	    assert !active (LEDLight_Unit._LED_Light_Unit_._On_._Bulb_Status_.Bulb_on)
	}

	@Test
	operation test09 () {
	    enter
	    raise device.on
	    assert is_active
	    assert active (LEDLight_Unit._LED_Light_Unit_._On_)
	}

	@Test
	operation test10 () {
	    enter
	    assert is_active
	    assert !active (LEDLight_Unit._LED_Light_Unit_._On_)
	}

	@Test
	operation test11 () {
	    enter
	    assert is_active
	    assert active (LEDLight_Unit._LED_Light_Unit_._Off_)
	}

	@Test
	operation test13 () {
	    assert !active (LEDLight_Unit._LED_Light_Unit_._On_._Bulb_Status_.Bulb_on)
	}

	@Test
	operation test14 () {
	    assert !active (LEDLight_Unit._LED_Light_Unit_._On_)
	}

	@Test
	operation test15 () {
	    assert !active (LEDLight_Unit._LED_Light_Unit_._On_._Bulb_Status_.Bulb_on._Luminosity_.Change_Luminosity_Level)
	}

	@Test
	operation test16 () {
	    assert !active (LEDLight_Unit._LED_Light_Unit_._On_._Bulb_Status_.Bulb_on_standby)
	}

	@Test
	operation test17 () {
	    assert !active (LEDLight_Unit._LED_Light_Unit_._Off_)
	}

	@Test
	operation test18 () {
	    triggerWithoutEvent
	    assert !is_active
	}

	@Test
	operation test19 () {
	    assert !is_active
	}

	@Test
	operation test20 () {
	    exit
	    assert !is_final
	}

	@Test
	operation test24 () {
	    assert !is_active
	    enter
	    raise device.on
	    raise device.off
	    assert is_active
	}

	@Test
	operation test25 () {
	    assert !is_active
	    enter
	    raise device.on
	    proceed 500ms
	    assert is_active
	}

	@Test
	operation test26 () {
	    assert !is_final
	    assert !is_active
	}

	@Test
	operation test28 () {
	    assert !is_active
	    enter
	    assert is_active
	}

}